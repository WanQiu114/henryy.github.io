/*=============== GOOGLE FONTS ===============*/
@import url("https://fonts.googleapis.com/css2?family=Syne:wght@400..800&display=swap");

/*=============== VARIABLES CSS ===============*/
:root {
  --header-height: 3.5rem;
  /*========== Colors ==========*/
  /*Color mode HSL(hue, saturation, lightness)*/
  /* 
        Change favorite color
        Default: hsl(230, 55%, 55%)
        Purple: hsl(245, 55%, 55%) - Blue: hsl(210, 55%, 55%)
        Pink: hsl(340, 55%, 55%) - Green: hsl(162, 55%, 55%)
        Orange: hsl(14, 55%, 55%)

        For more colors visit: https://colors.dopely.top/color-pedia
        -> Choose any color 
        -> Click on tab (Color Conversion)
        -> Copy the color mode (HSL)
  */
  --hue: 178;
  --first-color: hsl(var(--hue), 55%, 55%);
  --first-color-light: hsl(var(--hue), 55%, 65%);
  --first-color-alt: hsl(var(--hue), 50%, 50%);
  --title-color: hsl(var(--hue), 30%, 95%);
  --text-color: hsl(var(--hue), 20%, 80%);
  --text-color-light: hsl(var(--hue), 20%, 70%);
  --body-color: hsl(var(--hue), 40%, 16%);
  --container-color: hsl(var(--hue), 40%, 20%);

  /*========== Font and typography ==========*/
  /*.5rem = 8px | 1rem = 16px ...*/
  --body-font: "Syne", sans-serif;
  --biggest-font-size: 3rem;
  --big-font-size: 1.5rem;
  --h1-font-size: 1.5rem;
  --h2-font-size: 1.25rem;
  --h3-font-size: 1rem;
  --normal-font-size: .938rem;
  --small-font-size: .813rem;

  /*========== Font weight ==========*/
  --font-regular: 400;
  --font-semi-bold: 600;
  --font-bold: 700;

  /*========== z index ==========*/
  --z-tooltip: 10;
  --z-fixed: 100;
}

/*========== Responsive typography==========*/
@media screen and (min-width: 1150px) {
  :root {
    --biggest-font-size: 5.5rem;
    --big-font-size: 2.75rem;
    --h1-font-size: 2.25rem;
    --h2-font-size: 1.5rem;
    --h3-font-size: 1.25rem;
    --normal-font-size: 1.125rem;
    --small-font-size: .875rem;
  }
}

/*=============== BASE ===============*/
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html {
  scroll-behavior: smooth;
}

body,
input,
textarea,
button {
  font-family: var(--body-font);
  font-size: var(--normal-font-size);
}

body {
  background-color: var(--body-color);
  color: var(--text-color);
}

input,
button,
textarea {
  border: none;
  outline: none;
}

h1, h2, h3 {
  color: var(--title-color);
  font-weight: var(--font-semi-bold);
}

p {
  line-height: 130%;
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
}

/*=============== REUSABLE CSS CLASSES ===============*/
.container {
  max-width: 1120px;
  margin-inline: 1.5rem;
}

.grid {
  display: grid;
  gap: 1.5rem;
}

.section {
  padding-block: 5rem 2rem;
}

.section__title {
  text-align: center;
  font-size: var(--h1-font-size);
  font-weight: var(--font-bold);
  margin-bottom: 2rem;
}

.main {
  overflow: hidden;
}

/*=============== HEADER & NAV ===============*/




.header{
  /*
position: fixed;
定义了元素的定位方式为 fixed，这意味着 .header 元素会被固定在页面的某个位置，
无论页面如何滚动，它都会保持在视窗中同一位置。它脱离了正常的文档流，不会影响其他元素的布局。
*/
  position: fixed;
  height:80px;
  width: 100%;
  top: 0;
  left: 0;
  background-color: transparent;
  /*
  z-index: var(--z-fixed);

设置元素的 z-index，用于定义元素的层叠顺序。值是从 CSS 变量 --z-fixed 中获取的，
确保这个 .header 在需要时可以覆盖其他内容（例如，放在所有其他元素的上面）。
z-index 的值越大，元素层级越高。
  */
  z-index: var(--z-fixed)
}


.nav{
  position: relative;
  height: var(--header-height);
  display: flex;
  justify-content: space-between;
  align-items: center;
}



.nav__logo{
  color:var(--title-color);
  font-weight: var(--font-bold)
}

.nav__toggle,
.nav__close{
  font-size: 1.5rem;
  color:var(--title-color);
  /*cursor: pointer; 是一个 CSS 样式，用来改变鼠标光标的外观。
  当用户将鼠标悬停在设置了该样式的元素上时，光标会变成一个“手指形状的指针”，
  通常用于指示该元素是可点击的（例如，按钮、链接、或其他可交互的元素）
  */
  cursor: pointer;
}

/* Navigation for mobile devices */

/*@media screen and (max-width: 1150px)
媒体查询声明，表示只有当设备的屏幕宽度 小于或等于 1150px 时，以下样式才会生效。
通常用来调整布局以适应较小的设备（如平板电脑、手机）。*/

@media screen and (max-width: 1150px){
  .nav__menu{
    position: fixed;
    top:0;
    right:-100%;
    /*background-color: hsla(var(--hue), 70%, 4%, .2);
    设置背景颜色为半透明的 HSL 色彩模式。var(--hue) 是一个自定义的 CSS 变量，表示色相。
    70% 是饱和度，4% 是亮度，而 0.2 是透明度。这使得背景颜色带有半透明效果。*/

    /*backdrop-filter: blur(16px); 和 -webkit-backdrop-filter: blur(16px);
    这两行代码用于在支持的浏览器中对 .nav__menu 背后的内容应用模糊效果（blur）。
    -webkit- 是为 WebKit 浏览器（如 Safari 和旧版 Chrome）提供的前缀。*/
    background-color: hsla(var(--hue),70%,4%,.2);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    width:80%;
    height:100%;
    /*padding: 7rem 3rem;
    菜单内容的内边距设置为 7rem（顶部和底部）和 3rem（左右）。
    这为内容提供了足够的空间。*/
    padding: 7rem 3rem;
    /*transition: right .4s;
    定义了一个平滑的过渡效果，表示当菜单的 right 属性发生变化时，
    会在 0.4 秒内逐渐完成（可能是用于滑动菜单的效果）。*/
    transition: right .4s;
  }
}

.nav__list{
  /*关于flex的解释，弹性盒子https://blog.csdn.net/qq_44537625/article/details/100040169*/
  display: flex;
  flex-direction: column;
  row-gap:3rem;
}


.nav__link{
  position: relative;
  color:var(--title-color);
  font-weight:var(--font-semi-bold);
  transition: color .4s;
  
}

/*这个 CSS 代码是为 .nav__link 元素的伪元素 ::after 定义的样式。通常用来为导航链接添加一个动态的下划线或类似的装饰效果。*/
.nav__link::after{
  /*content: '';
  为伪元素 ::after 定义一个空的内容。::after 是用来在 .nav__link 元素后面添加额外的内容或装饰的伪元素。在这里没有显示任何文本内容，只是创建一个用于装饰的占位元素*/
  content: '';
  width: 0;
  height: 2px;
  background-color: var(--first-color-light);
  position: absolute;
  left:0;
  bottom: -.5rem;
  transition: width .3s;
}

/*鼠标放在上面会发生的事件*/
.nav__link:hover{
  color: var(--first-color-light);
}
.nav__link:hover::after {
  width: 100%;
}

.nav__close{
  position: absolute;
  top: 1rem;
  right: 1.5rem;
}


/* Show menu */

.show-menu{
  right : 0;

}




/* Add blur header */
/*这段代码的功能是通过 JavaScript 和 CSS 实现页面头部在滚动时模糊化的效果。我们来逐步解释这段代码的工作原理。
.blur-header::after: 这是一个伪元素，应用于拥有 .blur-header 类的元素上。伪元素会在目标元素的内容后面生成一个额外的盒子。
content: '';: 创建一个空的伪元素。
position: absolute;: 绝对定位，使伪元素可以根据父元素进行位置的调整。
width: 1000%;: 宽度设置为目标元素宽度的 10 倍，确保在宽屏下也能覆盖整个背景。
height: 100%;: 伪元素的高度与父元素的高度一致，确保它覆盖整个头部区域。
background-color: hsla(var(--hue), 70%, 4%, .2);: 使用 hsla() 函数定义了伪元素的背景色，颜色通过 CSS 变量 --hue 控制，颜色的不透明度为 20%。
backdrop-filter: blur(16px);: 给伪元素添加背景模糊效果，模糊程度为 16px。backdrop-filter 会影响位于伪元素后面的内容。
-webkit-backdrop-filter: blur(16px);: 为了兼容 WebKit 浏览器（如 Safari），使用了带有 -webkit- 前缀的 backdrop-filter。
top: 0; left: 0;: 将伪元素放置在父元素的左上角。
z-index: -1;: 设置伪元素的 z-index 为 -1，确保伪元素位于内容的后面，而不是覆盖在内容之上。*/
.blur-header::after{
  content:'';
  position: absolute;
  width: 1000%;
  height: 100%;
  background-color: hsla(var(--hue),70%,4%,.2);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  top:0;
  left:0;
  z-index:-1;
}



/* Active link */

.active-link{
  color:var(--first-color-light);
}

.active-link::after{
  width:30%;
}

/*=============== HOME ===============*/

.home__container{
  row-gap: 2rem;
  padding-top: 1rem;
  display: flex;
    flex-direction: column; /* 垂直排列 */
    align-items: center;
}

.home__img{
  width: 220px;
  justify-self: center;
  mask-image: linear-gradient(to bottom, hsla(var(--hue),40%,16%)60%,transparent 100%);
}

.home__name{
  font-size: var(--biggest-font-size);
  font-weight: var(--font-bold);
  word-break: break-word;
  margin-bottom: 1rem;
  justify-self: center;
  width: 390px;
  
  display: flex;
  flex-direction: column; /* 垂直排列 */
  align-items: center;
}

.home__profession{
  position: relative;
  font-size: var(--big-font-size);
  color: var(--text-color);
  width:max-content;

  
  


}



.home__profession:hover{
  color: var(--first-color-light);
}



/*这段 CSS 代码为页面中的滚动按钮和其相关元素定义了样式及动画效果。下面是对各个部分的解释, 在index.html里面有定义*/

.home__scroll{
  /*color: var(--title-color);: 定义文本的颜色，使用了 CSS 变量 --title-color，确保和标题颜色一致。
display: inline-flex;: 使用 inline-flex 使元素作为行内块元素显示，同时可以应用 Flexbox 布局。
column-gap: .5rem;: 在子元素之间添加 0.5rem 的列间距，使图标和文本之间留有间距。
align-items: center;: 垂直方向上居中对齐子元素（图标和文本）。
justify-self: center;: 在容器内水平居中对齐这个元素。
margin-top: 3rem;: 添加顶部外边距，确保滚动按钮和上方内容有足够的间距。*/
  color: var(--title-color);
  display: inline-flex;
  column-gap: .5rem;
  align-items: center ;
  justify-self: center;
  margin-top: 3rem;
}

.home__scroll-box{
  /*background-color: var(--first-color);: 背景颜色使用 CSS 变量 --first-color，通常是页面的主色调。
width: 32px; height: 32px;: 定义了盒子的宽度和高度为 32px。
display: grid; place-items: center;: 使用 CSS Grid 布局，并通过 place-items: center 将盒子内的内容（图标）居中对齐。
font-size: 1.5rem;: 设置盒子内图标的大小为 1.5rem。
overflow: hidden;: 隐藏超出盒子范围的内容，确保动画不会在外部显示。*/
  background-color: var(--first-color);
  width:32px;
  height: 32px;
  display: grid;
  place-items: center;
  font-size: 1.5rem;
  overflow: hidden;
}

.home__scroll-text{
  font-weight: var(--font-semi-bold);

}
/*animation: scroll-down 3s infinite;: 给图标添加了一个名为 scroll-down 的动画，持续时间为 3 秒，并无限次循环执行。
这里我改了一下，hover在他鼠标悬停才会有用*/
.home__scroll-box:hover i{
  animation:scroll-down 3s infinite;
}

/* Animate scroll icon */

/*0%: 图标最初的位置向上移动 -1rem，并且完全透明（opacity: 0）。
50%: 图标回到初始位置（translateY(0)），同时变得完全不透明（opacity: 1）。
100%: 图标稍微向下移动 0.6rem，并再次变得透明（opacity: 0）。*/
@keyframes scroll-down {
  0%{
    transform: translateY(-1rem);
    opacity:0;
  }
  50%{
    transform: translateY(0);
    opacity:1;
  }
  100%{
    transform: translateY(0.6rem);
    opacity:0;
  }
}



/*=============== BUTTON ===============*/
/*给按钮做一个框*/
.button{
  background-color: var(--first-color);
  justify-content: center;
  color: var(--title-color);
  display: inline-flex;
  font-weight: var(--font-semi-bold);
  padding: 1.25rem 2rem;
  transition: background-color 0.4s;
}

.button:hover{
  background-color: var(--first-color-alt);
}


/*=============== WORKS ===============*/

.work{
  background-color: var(--container-color);
}

.work__card{
  background-color: var(--first-color);
}

.work__link{
  display: block;
  position: relative;
  background-color: var(--body-color);
  padding: 2rem 1.5rem 1.5rem 1.5rem;
  color:var(--text-color);
  transition: transform .4s;
}

.work__title{
  font-size: var(--h3-font-size);
  margin-bottom: .75rem;
}

.work__description{
  margin-bottom: 1.5rem;
}

.work__link i{
  position: absolute;
  top:1.8rem;
  right: 1.5rem;
  font-size: 1.5rem;
  color: var(--first-color-light);
  transition: transform .4s;
}

.work__link:hover{
  transform: translateY(-.35rem);
}

.work__link:hover i{
  transform: translateY(-.5rem);
}







/*=============== INFO ===============*/

.info__container{
  row-gap: 3rem;
}

.info__title{
  position:relative;
  font-size: var(--small-font-size);
  color: var(--text-color);
  margin-bottom: 2rem;
}

.info__title::after{
  content:'';
  width: 25px;
  height: 2px;
  background-color: var(--text-color);
  position: absolute;
  left:0;
  bottom: -.5rem;
 
}

/* ABOUT */

.about{
  row-gap:3rem;
}

.about__description{
  margin-bottom: 2rem;
}

/*这段 CSS 代码的作用是为 .about__description 元素中的 <b> 标签（加粗文本）定义一个自定义的颜色样式。以下是逐行解释：
.about__description b:

选择器是 .about__description 类内的 <b> 标签。
这意味着该样式只会应用到那些位于拥有 .about__description 类的元素内部的 <b> 标签，而不是页面上的所有 <b> 标签。
同理i就是斜体*/

.about__description b{
  color: var(--first-color-light)
}


.about__img{
  width:250px;
  justify-self: center;
  mask-image: linear-gradient(to bottom, hsla(var(--hue), 40%, 16%) 60%,transparent 100%)
}

.about__button{
  width:100%;
}

/* EXPERIENCE */

.experience__profession{
  font-size: var(--h3-font-size);
  margin-bottom: 0.25rem
}

.experience__data{
  row-gap: 1rem;
}

.experience__content{
  row-gap: 2rem;
}

.experience__company{
  font-size: var(--h2-font-size);
  font-weight: var(--font-bold);
}

.experience__date{
  display: block;
  font-size:var(--small-font-size);
  margin-bottom: 0.75rem;
}

/* SKILLS */

.skills__img{
  width: 35px;
  margin-bottom: 0.5rem;
}

.skills__name{
  font-size: var(--small-font-size);
}

.skills__content{
  grid-template-columns: repeat(3, max-content);
  justify-content: space-around;
  align-items: flex-end;
}

.skills__box{
  display: grid;
  place-items: center;
  transition: transform 0.4s;
}

.skills__box:hover{
  transform: translateY(-.35rem);
}



/*=============== SERVICES -> Strength ===============*/

.strength{
  background-color: var(--container-color);

}

.skills__img{
  width: 25px;
  margin-bottom: 0.5rem;
}

.strength__container{
  row-gap: 2rem;
}

.strength__title{
  font-size:var(--h3-font-size);
  margin-bottom: .75rem;
}
.strength__icon{
  margin-bottom: 8px;
}


/*=============== CONTACT ===============*/
.contact__info{
  row-gap: 2rem;
  align-items:center;
  display: flex;
  justify-content: center;  /* 水平居中 */
  
}

.contact__social{
  grid-template-columns: repeat(2,max-content);
  justify-content: center;
  column-gap: 3rem;
}

.contact__social-link{
  color: var(--title-color);
  display: inline-flex;
  column-gap:.25rem;
  align-items:center;
  transition: color .4s;
}
.contact__social-link i{
  font-size: 1.5rem;
}
.contact__social-link span{
  font-size:var(--small-font-size);
  font-weight:var(--font-semi-bold);
}

.contact__social-link:hover{
  color: var(--first-color-light);
}

/*=============== FOOTER ===============*/

.footer{
  background-color: var(--container-color);
}

.footer__container{
  padding-block: 3rem 2rem;
  row-gap: 3rem;
}

.footer__links{
  display: flex;
  justify-content: center;
  column-gap: 2.5rem;
}

.footer__link{
  color: var(--title-color);
  font-weight:var(--font-semi-bold);
  transition: color .4s;
}

.footer__link:hover{
  color: var(--first-color-light);
}


/*=============== SCROLL BAR ===============*/


/*=============== SCROLL UP ===============*/
.scroll__up{

position: fixed;
right: 1rem;
bottom: -50%;
background-color: var(--container-color);
display:inline-flex;
padding: 6px;
color:var(--title-color);
font-size:(var(--small-font-size));
z-index: var(--z-tooltip);
transition: bottom 0.4s, transform 0.4s;

}

.scroll__up-box{
  /*background-color: var(--first-color);: 背景颜色使用 CSS 变量 --first-color，通常是页面的主色调。
width: 32px; height: 32px;: 定义了盒子的宽度和高度为 32px。
display: grid; place-items: center;: 使用 CSS Grid 布局，并通过 place-items: center 将盒子内的内容（图标）居中对齐。
font-size: 1.5rem;: 设置盒子内图标的大小为 1.5rem。
overflow: hidden;: 隐藏超出盒子范围的内容，确保动画不会在外部显示。*/
  background-color: var(--first-color);
  width:32px;
  height: 32px;
  display: grid;
  place-items: center;
  font-size: 1.5rem;
  overflow: hidden;
}



.scroll__up-box:hover i{
  animation:scroll-up 3s infinite;
}

/* Animate scroll icon */

/*0%: 图标最初的位置向上移动 -1rem，并且完全透明（opacity: 0）。
50%: 图标回到初始位置（translateY(0)），同时变得完全不透明（opacity: 1）。
100%: 图标稍微向下移动 0.6rem，并再次变得透明（opacity: 0）。*/
@keyframes scroll-up {
  0%{
    transform: translateY(1rem);
    opacity:0;
  }
  50%{
    transform: translateY(0);
    opacity:1;
  }
  100%{
    transform: translateY(-0.6rem);
    opacity:0;
  }
}

.show-scroll{
  bottom: 3rem;
}

/* Show Scroll Up */


/*=============== BREAKPOINTS ===============*/
/* For small devices */
  @media screen and (max-width: 300px){
    .container{
      margin-inline: 1rem;
    }

    .skills__content{
      grid-template-columns: repeat(2,max-content);
    }
  }

/* For medium devices */
@media screen and (min-width: 540px){
  .home__container,
  .work__container,
  .info__container,
  .strength__container,
  .footer__container
  {
    grid-template-columns: 350px;
    justify-content: center;
  }
}

@media screen and (min-width: 768px){
  .nav__menu{
    width:50%;
  }

  .home__container{
    grid-template-columns: repeat(2,350px);
  }
  .home__data{
    align-self: flex-end;
    padding-bottom: 3rem;
    order: -1;
  }
  .home__scroll{
    grid-column: 1/3;
  }
  .work__container{
    grid-template-columns: repeat(2,350px);
  }
  .info__container{
    grid-template-columns: initial;
  }
  .about{
    grid-template-columns: repeat(2, 350px);
    align-items: center;
  }
  .about__content{
    order: 1;
  }
  .experience__data{
    grid-template-columns: repeat(2, 1fr);
  }

  .skills__content{
    grid-template-columns: repeat(5,max-content);
    justify-content: initial;
    column-gap: 4rem;
  }
  .strength__container{
    grid-template-columns: repeat(2,320px);
  }
  
}

/* For large devices */
@media screen and (min-width: 1150px){
  .container{
    margin-inline: auto;
  }

  .section{
    padding-block: 7rem 5rem;
  }

  .section__title{
    margin-bottom:4rem;
  }

  .nav{
    height: calc(var(--header-height)+2rem);
  }
  .nav__toggle,
  .nav__close{
    display:none;
  }
  .nav__menu{
    width:initial;
  }
  .nav__list{
    flex-direction:row;
    column-gap: 4rem;
    margin-top: 25px;
  }
  .home__container{
    grid-template-columns: 375px 350px;
    gap: 3rem 16rem;
  }
  .home__img{
    width: 350px;
  }
  .home__name{
    margin-bottom: 1.5rem;
  }
  .home__profession::after{
    bottom: -1rem;
    width: 35%;
  }
  .work__container{
    grid-template-columns: repeat(2, 540px);
    gap: 2.5rem;
  }
  .work__link{
    padding: 3rem 3rem 2rem;
  }

  .work__title{
    font-size: var(--h2-font-size);
    margin-bottom: 1rem;
  }
  .work__link i{
    font-size: 2rem;
  }
  .info__container{
    row-gap:4rem;
  }
  .info__title{
    font-size: var(--normal-font-size);
    margin-bottom: 3.5rem;
  }

  .about{
    grid-template-columns: 320px 420px;
    column-gap: 11.5rem;
  }
  .about__img{
    width:320px;
  }
  .about__description{
    margin-bottom: 3rem;
  }
  .about__button{
    width:initial;
  }
  .experience__content{
    row-gap: 4rem;
  }
  .experience__data{
    grid-template-columns: 320px 380px;
    column-gap: 11.5rem;
  }
  .experience__company{
    font-size: var(--h1-font-size);
  }
  .experience__profession{
    margin-bottom: 0.5rem;
  }
  .experience__date{
    font-size: var(--normal-font-size);
    margin-bottom: 1.5rem;
  }
  .skills__content{
    grid-template-columns: repeat(6, max-content);
  }
  .strength__container{
    grid-template-columns: repeat(2, 350px);
    gap: 6rem 13rem;
  }
  .contact__social{
    grid-template-columns: repeat(3, max-content);
    column-gap: 5rem;
    grid-template-columns: 580px;
    display: flex;
    justify-content: center;  /* 水平居中 */
    align-items: center; 
    margin-top: 5rem;
  }
  
}
